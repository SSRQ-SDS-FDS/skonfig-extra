#!/bin/sh -e
#
# 2020 Dennis Camera (dennis.camera@ssrq-sds-fds.ch)
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#


os=$(cat "${__global:?}/explorer/os")

case ${os}
in
	(debian|devuan)
		kernel_headers_pkg=$(cat "${__object:?}/explorer/kernel_headers_pkg")

		test -n "${kernel_headers_pkg}" || {
			echo 'Could not determine the name of the kernel headers package.' >&2
			exit 1
		}

		# ZFS
		export CDIST_ORDER_DEPENDENCY=true
		__package_apt "${kernel_headers_pkg}"
		__package_apt zfs-modules
		__package_apt zfsutils-linux
		unset CDIST_ORDER_DEPENDENCY

		# FIXME: For some reason De*an does not build/install DKMS modules after
		# installing the package under some circumstances.
		#  1) dkms status
		# If it does not:
		#  2) dkms install all the not-installed modules, e.g.
		#     for beowulf stable:
		#      - dkms build spl/0.7.12
		#      - dkms build zfs/0.7.12
		#      - dkms install spl/0.7.12
		#      - dkms install zfs/0.7.12
		#     for beowulf backports:
		#      - dkms build zfs/0.8.4
		#      - dkms install zfs/0.8.4

		case $(cat "${__object:?}/explorer/mailer")
		in
			(mail)
				;;
			(sendmail|*)
				__package bsd-mailx
				mail_require=__package/bsd-mailx
				;;
		esac

		export CDIST_ORDER_DEPENDENCY=true
		require="__package_apt/zfsutils-linux ${mail_require-}" \
		__package_apt zfs-zed
		__start_on_boot zfs-zed
		unset CDIST_ORDER_DEPENDENCY
		;;
	(*)
		: "${__type:?}"  # make shellcheck happy
		printf "Your operating system (%s) is currently not supported by this type (%s)\n" "${os}" "${__type##*/}" >&2
		printf "Please contribute an implementation for it if you can.\n" >&2
		exit 1
		;;
esac

require='__package_apt/zfs-modules' \
__block /etc/modprobe.d/zfs.conf:cdist-zfs-tunables \
	--state "$(test -s "${__object:?}/parameter/tunable" && echo present || echo absent)" \
	--file /etc/modprobe.d/zfs.conf \
	--prefix '# cdist:zfs-tunables' \
	--suffix '#/cdist:zfs-tunables' \
	--text - <<EOF
$(sed -e 's/^/options zfs /' "${__object:?}/parameter/tunable")
EOF

set_zed_rc() {
	require=__package_apt/zfs-zed \
	__key_value /etc/zfs/zed.d/zed.rc:"$1" \
		--delimiter '=' --exact_delimiter \
		--file /etc/zfs/zed.d/zed.rc \
		--key "$1" \
		--value "$(
			case ${2:?}
			in
				(true|false|yes|no)
					printf '%s' "$2"
					;;
				(*)
					if expr "$2" : '[0-9]*$' >/dev/null
					then
						# plain numbers
						printf '%s' "$2"
					else
						# quote strings
						printf '"%s"' "$2"
					fi
					;;
			esac)"
}

set_zed_rc ZED_NOTIFY_INTERVAL_SECS 900
set_zed_rc ZED_EMAIL_ADDR "$(head -n 1 "${__object:?}/parameter/mailto")"
set_zed_rc ZED_NOTIFY_VERBOSE "$(test -f "${__object:?}/parameter/notify-verbose" && echo 1 || echo 0)"
set_zed_rc ZED_USE_ENCLOSURE_LEDS 1
