#!/bin/sh -e
#
# 2020 Dennis Camera (dennis.camera@ssrq-sds-fds.ch)
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#


os=$(cat "${__global:?}/explorer/os")

state_should=present

case ${os}
in
	(debian|devuan)
		mailer=$(cat "${__object:?}/explorer/mailer")
		case ${mailer}
		in
			(mail)
				sendmail_patch_state=absent
				;;
			(sendmail)
				sendmail_patch_state=present
				;;
			(*)
				sendmail_patch_state=absent
				__package bsd-mailx
				export require=__package/bsd-mailx
				;;
		esac

		require=$(test "${state_should}" = absent || echo __package_apt/smartmontools) \
		__file /etc/smartmontools/run.d/10sendmail \
			--state "${sendmail_patch_state}" \
			--owner 0 --group 0 --mode 0755 \
			--source "${__type:?}/files/10sendmail"

		require=$(test "${state_should}" != absent || echo __file/etc/smartmontools/run.d/10sendmail) \
		__package_apt smartmontools --state "${state_should}"
		export require=__package_apt/smartmontools

		if test "${state_should}" = present
		then
			# Enable smartd
			__key_value /etc/default/smartmontools:start_smartd \
				--delimiter = --exact_delimiter \
				--file /etc/default/smartmontools --key start_smartd \
				--value 'yes'

			require=__key_value/etc/default/smartmontools:start_smartd \
			__start_on_boot smartmontools
		fi
		;;
	(*)
		: "${__type:?}"  # make shellcheck happy
		printf "Your operating system (%s) is currently not supported by this type (%s)\n" "${os}" "${__type##*/}" >&2
		printf "Please contribute an implementation for it if you can.\n" >&2
		exit 1
		;;
esac
